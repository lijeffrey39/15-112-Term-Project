{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11080\viewh8480\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 The problem I am trying to solve is to create a snowboarding simulation. I first approached this by finding the 2d physics engine to handle the player. Then I found a way to create slopes using the Bezier algorithm. However, when creating the platformer, the player must not move, but instead, the surface should move in the opposite direction. To do this, I found the current position of the player in the simulation, and moved the surface in the opposite direction. The gradient for the mountains were generated using a gradient algorithm. The current surfaces, hills, and coins, and rocks were generated using procedural generation. The user interface involves the user pressing space, left and right. Pressing space allows the player to jump over obstacles. Tricks can also be done by pressing left and right. One application that is similar to my game is called Alto\'92s Adventure. It is a 2d snowboarding simulator, which is something I plan to make as well. It includes random generation of the slopes. I also includes many types of terrain that are randomly selected. One feature that I added is the ability for the character to perform certain tricks so that the player could earn points based on the trick. \
}